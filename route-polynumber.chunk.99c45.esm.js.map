{"version":3,"sources":["webpack:///./routes/common/webgl2/index.tsx","webpack:///./routes/common/canvas/style.css","webpack:///./routes/polynumber/fragment.js","webpack:///./routes/common/canvas/index.tsx","webpack:///./routes/common/grid-overlay/style.css","webpack:///./routes/common/grid-overlay/index.tsx","webpack:///./routes/polynumber/index.tsx","webpack:///./routes/polynumber/vertex.js"],"names":["defaultContextOptions","alpha","depth","preserveDrawingBuffer","WebGL2","props","getContext","init","ready","draw","onResize","framesPerSecond","rest","ref","createRef","frameMilliseconds","undefined","useEffect","canvas","current","renderCallbackID","paused","frameCount","ctx","alert","window","location","href","handleResize","width","innerWidth","height","innerHeight","addEventListener","handleBlur","handleFocus","setFullscreen","document","fullscreenElement","body","requestFullscreen","catch","err","console","error","render","setTimeout","requestAnimationFrame","whenReady","clearTimeout","cancelAnimationFrame","removeEventListener","Canvas","animate","loopCallbackID","loop","canvasMethodRefs","axisLabelFormat","d","n","repeat","zoomFactor","microZoomFactor","free","GridOverlay","setTranslate","setScale","log","canvasCenter","translate","scale","velocity","xLabelOffset","yLabelOffset","contextHeight","clearRect","powerX","Math","ceil","log10","powerY","factorX","factorY","spaceX","spaceY","xIndexOffset","yIndexOffset","firstXPosition","firstYPosition","xLineCount","floor","yLineCount","xMiddleLineIndex","yMiddleLineIndex","beginPath","i","x","moveTo","lineTo","j","label","fillText","y","save","rotate","PI","restore","stroke","mouseDown","lastMousePosition","lastTouch1Position","lastTouch2Position","handleMouseDown","event","button","clientX","clientY","preventDefault","handleMouseUp","handleContextMenu","handleMouseMove","dx","dy","f","zoomTo","zoomLastPosition","zoomToPosition","handleTouchDown","touches","pageX","pageY","handleTouchUp","handleTouchMove","length","x1","y1","x2","y2","zoomModifier","touchMidpoint","deltaY","handleKeyDown","code","class","style","initialScale","strokeStyle","lineWidth","fillStyle","textAlign","font","halfWidth","halfHeight","initShader","gl","type","source","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","PolynumberVisualizer","path","library","default","polynumber","shaderProgram","timeUniform","translateUniform","scaleUniform","polyrat","Polyrat","coefficents","Helmet","title","id","for","rows","fragmentShaderSource","replace","toGLSLFormula","program","createProgram","getElementById","textContent","fragmentShader","FRAGMENT_SHADER","attachShader","vertexShaderSource","vertexShader","VERTEX_SHADER","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","useProgram","initProgram","positionAttrib","getAttribLocation","vertices","Float32Array","vertexBuffer","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","vertexAttribPointer","FLOAT","enableVertexAttribArray","getUniformLocation","bindBuffers","viewport","uniform1f","uniform2f","drawArrays","TRIANGLE_STRIP"],"mappings":"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","file":"route-polynumber.chunk.99c45.esm.js","sourcesContent":["import { FunctionalComponent, createRef, h } from 'preact'\nimport { useEffect } from 'preact/hooks'\n\ntype GetContextFunction = (webGL2: HTMLCanvasElement) => WebGL2RenderingContext\n\ntype InitFunction = (ctx: WebGL2RenderingContext) => void\n\ntype ReadyFunction = (whenReady: VoidFunction) => void\n\ntype DrawFunction = (ctx: WebGL2RenderingContext, frameCount: number) => void\n\ntype ResizeFunction = (ctx: WebGL2RenderingContext) => void\n\ninterface WebGL2Options {\n  contextType?: string;\n  framesPerSecond?: number;\n}\n\ninterface WebGL2Props {\n  getContext?: GetContextFunction;\n  init?: InitFunction;\n  ready?: ReadyFunction;\n  draw: DrawFunction;\n  onResize?: ResizeFunction;\n  framesPerSecond?: number;\n  options?: WebGL2Options;\n}\n\nconst defaultContextOptions = {\n  alpha: false,\n  depth: false,\n  preserveDrawingBuffer: true\n}\n\nexport const WebGL2: FunctionalComponent<WebGL2Props> = (props: WebGL2Props) => {\n  const { getContext, init, ready, draw, onResize, framesPerSecond, ...rest } = props\n  const ref = createRef()\n  const frameMilliseconds = framesPerSecond ? 1000 / framesPerSecond : undefined\n\n  useEffect(() => {\n    const canvas = ref.current as HTMLCanvasElement\n    let paused = false\n    let frameCount = -1\n    let renderCallbackID: number\n    const ctx = getContext ? getContext(canvas) : canvas.getContext('webgl2', defaultContextOptions) as WebGL2RenderingContext\n    if (!ctx) {\n      alert('Error getting context. WebGL2 is required.')\n      if (typeof window !== 'undefined') {\n        window.location.href='https://get.webgl.org/webgl2/'\n      }\n      return\n    }\n\n    const handleResize = (): void => {\n      ctx.canvas.width = window.innerWidth\n      ctx.canvas.height = window.innerHeight\n      if (onResize) onResize(ctx)\n    }\n    window.addEventListener('resize', handleResize)\n    handleResize()\n\n    const handleBlur = (): void => {\n      paused = true\n    }\n    window.addEventListener('blur', handleBlur)\n\n    const handleFocus = (): void => {\n      paused = false\n    }\n    window.addEventListener('focus', handleFocus)\n\n    const setFullscreen = (): void => {\n      if (!document.fullscreenElement) {\n        document.body.requestFullscreen().catch(err => {\n          console.error('Fullscreen fail:', err)\n        })\n      }\n    }\n    window.addEventListener('click', setFullscreen)\n\n    if (init) init(ctx)\n\n    const render = (): void => {\n      if (paused) {\n        setTimeout(render, 128)\n        return\n      }\n      frameCount++\n      if (frameMilliseconds) {\n        renderCallbackID = window.setTimeout(render, frameMilliseconds)\n      }\n      else {\n        renderCallbackID = window.requestAnimationFrame(render)\n      }\n      draw(ctx, frameCount)\n    }\n\n    const whenReady = (): void => {\n      setTimeout(render, 0)\n    }\n\n    if (ready===undefined) whenReady()\n    else ready(whenReady)\n\n    return (): void => {\n      if (frameMilliseconds) {\n        window.clearTimeout(renderCallbackID)\n      }\n      else {\n        window.cancelAnimationFrame(renderCallbackID)\n      }\n      window.removeEventListener('resize', handleResize)\n      window.removeEventListener('blur', handleBlur)\n      window.removeEventListener('focus', handleFocus)\n      window.removeEventListener('click', setFullscreen)\n    }\n\n  }, [getContext, init, ready, draw, onResize, ref, frameMilliseconds])\n\n  return <canvas ref={ref} {...rest} />\n}\n\nexport default WebGL2\n","// extracted by mini-css-extract-plugin\nexport default {\"canvas_frame\":\"canvas_frame__1myZW\",\"art_plaque\":\"art_plaque__2F3EQ\"};","export default `#version 300 es\n#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\n#define TAU 6.2831853071795865\n\nuniform float u_time;\nuniform vec2 u_translate;\nuniform vec2 u_scale;\nout vec4 fragmentColor;\n\nvoid main() {\n  float x = ( gl_FragCoord.x + u_translate.x ) * u_scale.x;\n  float y = ( gl_FragCoord.y + u_translate.y ) * u_scale.y;\n\n  // the curve is where this evaluates to 0, otherwise this is the \"distance\" to it\n  float z = POLYNUMBER_FORMULA;\n\n  // draw the curve as full green, tapering out to zero at a distance of 1\n  float d = 1.0 - abs(z);\n  fragmentColor.g = d < 0.0 ? 0.0 : pow(d, 16.0);\n\n  // draw the fractional part of z as blue, the integer values can be seen as black-blue barriers\n  fragmentColor.b = mod(z + u_time / 67.0, 1.0);\n\n  // draw a sin wave through zed in red\n  fragmentColor.r = sin(z * TAU - u_time / 11.0);\n}\n`","import { FunctionalComponent, createRef, h } from 'preact'\nimport { useEffect } from 'preact/hooks'\n\ntype GetContextFunction = (canvas: HTMLCanvasElement) => CanvasRenderingContext2D\n\ntype InitFunction = (ctx: CanvasRenderingContext2D) => void\n\ntype ReadyFunction = (whenReady: VoidFunction) => void\n\ntype DrawFunction = (ctx: CanvasRenderingContext2D, frameCount: number) => void\n\ntype ResizeFunction = (ctx: CanvasRenderingContext2D) => void\n\ntype RenderFunction = () => void\n\nexport interface CanvasOptions {\n  contextType?: string;\n  framesPerSecond?: number;\n}\n\nexport interface CanvasMethods {\n  render: RenderFunction;\n}\n\nexport interface CanvasProps {\n  getContext?: GetContextFunction;\n  init?: InitFunction;\n  ready?: ReadyFunction;\n  draw: DrawFunction;\n  onResize?: ResizeFunction;\n  animate?: boolean;\n  framesPerSecond?: number;\n  options?: CanvasOptions;\n  canvasMethodRefs?: CanvasMethods;\n}\n\nconst Canvas: FunctionalComponent<CanvasProps> = (props: CanvasProps) => {\n  const { getContext, init, ready, draw, onResize, animate, framesPerSecond, ...rest } = props\n  const ref = createRef()\n  const frameMilliseconds = framesPerSecond ? 1000 / framesPerSecond : undefined\n\n  useEffect(() => {\n    const canvas = ref.current as HTMLCanvasElement\n    let paused = false\n    let frameCount = -1\n    let loopCallbackID: number\n    const ctx = getContext ? getContext(canvas) : canvas.getContext('2d') as CanvasRenderingContext2D\n\n    const handleResize = (): void => {\n      ctx.canvas.width = window.innerWidth\n      ctx.canvas.height = window.innerHeight\n      if (onResize) onResize(ctx)\n    }\n    window.addEventListener('resize', handleResize)\n    handleResize()\n\n    const handleBlur = (): void => {\n      paused = true\n    }\n    window.addEventListener('blur', handleBlur)\n\n    const handleFocus = (): void => {\n      paused = false\n    }\n    window.addEventListener('focus', handleFocus)\n\n    const setFullscreen = (): void => {\n      if (!document.fullscreenElement) {\n        document.body.requestFullscreen().catch(err => {\n          console.error('Fullscreen fail:', err)\n          // console.error(`Fullscreen fail: ${err.message} (${err.name})`)\n        })\n      }\n    }\n    window.addEventListener('click', setFullscreen)\n\n    if (init) init(ctx)\n\n    const render = (): void => {\n      draw(ctx, frameCount++)\n    }\n\n    const loop = (): void => {\n      if (paused) {\n        setTimeout(loop, 128)\n        return\n      }\n      frameCount++\n      if (frameMilliseconds) {\n        loopCallbackID = window.setTimeout(loop, frameMilliseconds)\n      }\n      else {\n        loopCallbackID = window.requestAnimationFrame(loop)\n      }\n      draw(ctx, frameCount)\n    }\n\n    // expose methods to parent\n    // @todo seems parents calling their children's methods is react antipattern, better way?\n    if (props.canvasMethodRefs) {\n      props.canvasMethodRefs.render = render\n    }\n\n    const whenReady = (): void => {\n      if (animate===false) {\n        setTimeout(render)\n      }\n      else {\n        setTimeout(loop)\n      }\n    }\n\n    if (ready===undefined) whenReady()\n    else ready(whenReady)\n\n    return (): void => {\n      if (frameMilliseconds) {\n        window.clearTimeout(loopCallbackID)\n      }\n      else {\n        window.cancelAnimationFrame(loopCallbackID)\n      }\n      window.removeEventListener('resize', handleResize)\n      window.removeEventListener('blur', handleBlur)\n      window.removeEventListener('focus', handleFocus)\n      window.removeEventListener('click', setFullscreen)\n    }\n\n  }, [getContext, init, ready, draw, onResize, ref, props.canvasMethodRefs, animate, frameMilliseconds])\n\n  return <canvas ref={ref} {...rest} />\n}\n\nexport default Canvas\n","// extracted by mini-css-extract-plugin\nexport default {\"grid_overlay\":\"grid_overlay__3wiLR\"};","import { FunctionalComponent, h } from 'preact'\nimport { useEffect } from 'preact/hooks'\nimport Canvas, { CanvasMethods } from '../../common/canvas'\nimport style from './style.css'\n\nexport const axisLabelFormat = (d: number, n: number): string => {\n  if (d === 0) return '0'\n  if (n > -1 && n < 4) {\n    return `${d}${'0'.repeat(n)}`\n  }\n  return `${d}⏨${n}`\n}\n\ntype TranslateFunction = (x: number, y: number) => void\n\ntype ScaleFunction = (x: number, y: number) => void\n\nexport interface GridOverlayProps {\n  canvasMethodRefs?: CanvasMethods;\n  setTranslate?: TranslateFunction;\n  setScale?: ScaleFunction;\n  initialScale?: number;\n}\n\nconst logBase = 10\nconst zoomFactor = logBase**(1/13)\nconst microZoomFactor = zoomFactor**(1/32)\nconst minimumGridSpacing = 24\nconst μ = .9\nconst translateFactor = 16\nlet free = true\n\nexport const GridOverlay: FunctionalComponent<GridOverlayProps> = (props: GridOverlayProps) => {\n  const { setTranslate, setScale, ...rest } = props\n  const canvasMethodRefs = {render() {console.log('canvasMethodRefs.render()')}}\n  const canvasCenter = [0, 0]\n  const translate = [0, 0]\n  const scale = [1, 1]\n  const velocity = [0, 0]\n  const fontSize = 12\n  const axisLabelMargin = 4\n  // const xLabelOffset = [-axisLabelMargin, fontSize+axisLabelMargin] // incorrect with rotation\n  const xLabelOffset = [-2, 10]\n  const yLabelOffset = [-axisLabelMargin, -axisLabelMargin]\n  let contextHeight = 0\n\n  const init = (ctx: CanvasRenderingContext2D): void => {\n    const initialScale = rest.initialScale ?? 16/ctx.canvas.width\n    scale[0] = scale[1] = initialScale\n    if (setScale) {\n      setScale(scale[0], scale[1])\n    }\n    draw(ctx)\n  }\n\n  const onResize = (ctx: CanvasRenderingContext2D): void => {\n\n    // line styles\n    ctx.strokeStyle = '#999'\n    ctx.lineWidth = 1\n    \n    // text styles\n    ctx.fillStyle = '#fff'\n    ctx.textAlign = 'right'\n    ctx.font = `${fontSize}px monospace`\n    // @todo white on white bg in unreadable\n    // shadowBlur works ok but is too slow in Firefox\n    // ctx.shadowColor = 'rgba(0,0,0,1)'\n    // ctx.shadowBlur = 1\n\n    contextHeight = ctx.canvas.height\n    const halfWidth = ctx.canvas.width/2\n    const halfHeight = ctx.canvas.height/2\n    if (canvasCenter[0] === 0) {\n      // initially translate (0,0) to center of canvas\n      canvasCenter[0] = halfWidth\n      canvasCenter[1] = halfHeight\n      translate[0] = -canvasCenter[0]\n      translate[1] = -canvasCenter[1]\n    }\n    else {\n      // adjust translation by difference in canvas size\n      const dx = halfWidth - canvasCenter[0]\n      const dy = halfHeight - canvasCenter[1]\n      translate[0] -= dx\n      translate[1] -= dy\n      canvasCenter[0] = halfWidth\n      canvasCenter[1] = halfHeight\n    }\n    draw(ctx)\n  }\n\n  const render = (): void => {\n    if (canvasMethodRefs && 'render' in canvasMethodRefs) {\n      canvasMethodRefs.render()\n    }\n  }\n\n  const draw = (ctx: CanvasRenderingContext2D): void => {\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height)\n\n    // slow down due to friction\n    velocity[0] *= μ\n    velocity[1] *= μ\n\n    // glide\n    if (free) {\n      translate[0] += velocity[0]\n      translate[1] -= velocity[1]\n    }\n    \n    // exponent for axis labels ⏨(n+x)\n    const powerX = Math.ceil(Math.log10(minimumGridSpacing * scale[0]))\n    const powerY = Math.ceil(Math.log10(minimumGridSpacing * scale[1]))\n    const factorX = 10**powerX\n    const factorY = 10**powerY\n\n    // set space between lines\n    const spaceX = factorX / scale[0]\n    const spaceY = factorY / scale[1]\n\n    // get first lines by rounding up\n    const xIndexOffset = Math.ceil(translate[0] * scale[0] / factorX)\n    const yIndexOffset = Math.ceil(translate[1] * scale[1] / factorY) \n    const firstXValue = xIndexOffset * factorX\n    const firstYValue = yIndexOffset * factorY\n    const firstXPosition = firstXValue / scale[0] - translate[0]\n    const firstYPosition = translate[1] - firstYValue / scale[1]\n    \n    // lines to write labels on\n    const xLineCount = Math.floor(ctx.canvas.width / spaceX)\n    const yLineCount = Math.floor(ctx.canvas.height / spaceY)\n    const xMiddleLineIndex = Math.floor(xLineCount / 2)\n    const yMiddleLineIndex = Math.floor(yLineCount / 2)\n\n    ctx.beginPath()\n    // draw x-axis grid lines\n    for (let i=0; i<=xLineCount; i++) {\n      const x = firstXPosition + i * spaceX\n      ctx.moveTo(x, 0)\n      ctx.lineTo(x, ctx.canvas.height)\n      // draw y-axis labels up the middle line\n      if (i === xMiddleLineIndex) {\n        for (let j=0; j<=yLineCount; j++) {\n          const label = axisLabelFormat(j + yIndexOffset, powerY)\n          const y = firstYPosition + ctx.canvas.height - j * spaceY\n          ctx.fillText(label, x + yLabelOffset[0], y + yLabelOffset[1])\n        }\n      }\n    }\n    // draw y-axis grid lines\n    for (let i=0; i<=yLineCount; i++) {\n      const y = firstYPosition + ctx.canvas.height - i * spaceY\n      ctx.moveTo(0, y)\n      ctx.lineTo(ctx.canvas.width, y)\n      // draw x-axis labels below the middle line\n      if (i === yMiddleLineIndex) {\n        for (let j=0; j<=xLineCount; j++) {\n          const label = axisLabelFormat(j + xIndexOffset, powerX)\n          const x = firstXPosition + j * spaceX\n          // rotate to avoid overlap with long labels and small grid\n          // @todo better to rotate once then draw all labels?\n          ctx.save()\n          ctx.translate(x + xLabelOffset[0], y + xLabelOffset[1])\n          ctx.rotate(-Math.PI/6)\n          ctx.fillText(label, 0, 0)\n          ctx.restore()\n          // no rotation:\n          // ctx.fillText(label, x + xLabelOffset[0], y + xLabelOffset[1])\n        }\n      }\n    }\n    ctx.stroke()\n\n    // update position of main canvas\n    if (setTranslate) {\n      setTranslate(translate[0], translate[1])\n    }\n  }\n\n  useEffect(() => {\n    let mouseDown = 0\n    let renderCallbackID: number\n    const lastMousePosition = [0, 0]\n    const lastTouch1Position = [-1, -1]\n    const lastTouch2Position = [-1, -1]\n\n    const handleMouseDown = (event: MouseEvent): boolean => {\n      mouseDown |= (1<<event.button)\n      lastMousePosition[0] = event.clientX\n      lastMousePosition[1] = event.clientY\n      velocity[0] = velocity[1] = 0\n      free = !(mouseDown&1)\n      event.preventDefault()\n      return false\n    }\n    window.addEventListener('mousedown', handleMouseDown)\n\n    const handleMouseUp = (event: MouseEvent): boolean => {\n      mouseDown ^= (1<<event.button)\n      event.preventDefault()\n      free = !(mouseDown&1)\n      return false\n    }\n    window.addEventListener('mouseup', handleMouseUp)\n\n    const handleContextMenu = (event: MouseEvent): boolean => {\n      event.preventDefault()\n      return false\n    }\n    window.addEventListener('contextmenu', handleContextMenu)\n\n    const handleMouseMove = (event: MouseEvent): void => {\n      const dx = lastMousePosition[0] - event.clientX\n      const dy = lastMousePosition[1] - event.clientY\n      const flingFactor = 4\n      // left-clicked, translate\n      if (mouseDown&1) {\n        velocity[0] = dx * flingFactor\n        velocity[1] = dy * flingFactor\n        translate[0] += dx\n        translate[1] -= dy\n        if (setTranslate) {\n          setTranslate(translate[0], translate[1])\n          render()\n        }\n      }\n      // middle-clicked, scale all axes\n      if (mouseDown&2) {\n        const f = microZoomFactor**-dy\n        scale[0] *= f\n        scale[1] *= f\n        if (setScale) {\n          setScale(scale[0], scale[1])\n          render()\n        } \n      }\n      // right-clicked, scale individual axes\n      if (mouseDown&4) {\n        const zoomTo = [\n          (lastMousePosition[0] + translate[0]) * scale[0],\n          (contextHeight - lastMousePosition[1] + translate[1]) * scale[1]\n        ]\n        const zoomLastPosition = [\n          zoomTo[0] / scale[0] - translate[0],\n          zoomTo[1] / scale[1] - translate[1]\n        ]\n        scale[0] *= microZoomFactor**dx\n        scale[1] *= microZoomFactor**-dy\n        if (setScale) {\n          setScale(scale[0], scale[1])\n        }\n        const zoomToPosition = [\n          zoomTo[0] / scale[0] - translate[0],\n          zoomTo[1] / scale[1] - translate[1]\n        ]\n        translate[0] -= zoomLastPosition[0] - zoomToPosition[0] - dx\n        translate[1] += zoomToPosition[1] - zoomLastPosition[1] - dy\n        if (setTranslate) {\n          setTranslate(translate[0], translate[1])\n        }\n        render()\n      }\n      lastMousePosition[0] = event.clientX\n      lastMousePosition[1] = event.clientY\n    }\n    window.addEventListener('mousemove', handleMouseMove)\n\n    const handleTouchDown = (event: TouchEvent): boolean => {\n      lastTouch1Position[0] = event.touches[0].pageX\n      lastTouch1Position[1] = event.touches[0].pageY\n      velocity[0] = velocity[1] = 0\n      free = false\n      return false\n    }\n    window.addEventListener('touchstart', handleTouchDown)\n\n    const handleTouchUp = (event: TouchEvent): boolean => {\n      void(event)\n      lastTouch1Position[0] = lastTouch1Position[1] = -1\n      free = true\n      return false\n    }\n    window.addEventListener('touchend', handleTouchUp)\n\n    const handleTouchMove = (event: TouchEvent): void => {\n      if (lastTouch1Position[0] > -1) {\n        if (event.touches.length===1) {\n          const dx = lastTouch1Position[0] - event.touches[0].pageX\n          const dy = lastTouch1Position[1] - event.touches[0].pageY\n          velocity[0] = dx\n          velocity[1] = dy\n          translate[0] += dx\n          translate[1] -= dy\n          lastTouch2Position[0] = lastTouch2Position[1] = -1\n          if (setTranslate) {\n            setTranslate(translate[0], translate[1])\n            render()\n          }\n        }\n        else {\n          if (lastTouch2Position[0] > -1) {\n            const x1 = event.touches[0].pageX\n            const y1 = event.touches[0].pageY\n            const x2 = event.touches[1].pageX\n            const y2 = event.touches[1].pageY\n            const q1 = (lastTouch1Position[0] - lastTouch2Position[0])**2 + (lastTouch1Position[1] - lastTouch2Position[1])**2\n            const q2 = (x1 - x2)**2 + (y1 - y2)**2\n            const zoomModifier = q1 / q2\n            const touchMidpoint = [\n              (x1 + x2) / 2,\n              (y1 + y2) / 2\n            ]\n            const zoomTo = [\n              (touchMidpoint[0] + translate[0]) * scale[0],\n              (contextHeight - touchMidpoint[1] + translate[1]) * scale[1]\n            ]\n            const zoomLastPosition = [\n              zoomTo[0] / scale[0] - translate[0],\n              zoomTo[1] / scale[1] - translate[1]\n            ]\n            scale[0] *= zoomModifier\n            scale[1] *= zoomModifier\n            if (setScale) {\n              setScale(scale[0], scale[1])\n            }\n            const zoomToPosition = [\n              zoomTo[0] / scale[0] - translate[0],\n              zoomTo[1] / scale[1] - translate[1]\n            ]\n            translate[0] -= zoomLastPosition[0] - zoomToPosition[0]\n            translate[1] += zoomToPosition[1] - zoomLastPosition[1]\n            if (setTranslate) {\n              setTranslate(translate[0], translate[1])\n            }\n            render()\n          }\n          lastTouch2Position[0] = event.touches[1].pageX\n          lastTouch2Position[1] = event.touches[1].pageY\n        }\n      }\n      lastTouch1Position[0] = event.touches[0].pageX\n      lastTouch1Position[1] = event.touches[0].pageY\n    }\n    window.addEventListener('touchmove', handleTouchMove)\n\n    const handleWheel = (event: WheelEvent): void => {\n      const zoomModifier = event.deltaY > 0 ? zoomFactor : 1/zoomFactor\n      const zoomTo = [\n        (lastMousePosition[0] + translate[0]) * scale[0],\n        (contextHeight - lastMousePosition[1] + translate[1]) * scale[1]\n      ]\n      const zoomLastPosition = [\n        zoomTo[0] / scale[0] - translate[0],\n        zoomTo[1] / scale[1] - translate[1]\n      ]\n      scale[0] *= zoomModifier\n      scale[1] *= zoomModifier\n      if (setScale) {\n        setScale(scale[0], scale[1])\n      }\n      const zoomToPosition = [\n        zoomTo[0] / scale[0] - translate[0],\n        zoomTo[1] / scale[1] - translate[1]\n      ]\n      translate[0] -= zoomLastPosition[0] - zoomToPosition[0]\n      translate[1] += zoomToPosition[1] - zoomLastPosition[1]\n      if (setTranslate) {\n        setTranslate(translate[0], translate[1])\n      }\n      render()\n    }\n    window.addEventListener('wheel', handleWheel)\n\n    const handleKeyDown = (event: KeyboardEvent): void => {\n      switch (event.code) {\n  \n      case 'KeyW':\n      case 'ArrowUp':\n      case 'Numpad8':\n        translate[1] -= translateFactor * zoomFactor\n        break\n            \n      case 'KeyS':\n      case 'ArrowDown':\n      case 'Numpad2':\n        translate[1] += translateFactor * zoomFactor\n        break\n             \n      case 'KeyA':\n      case 'ArrowLeft':\n      case 'Numpad4':\n        translate[0] += translateFactor * zoomFactor\n        break\n            \n      case 'KeyD':\n      case 'ArrowRight':\n      case 'Numpad6':\n        translate[0] -= translateFactor * zoomFactor\n        break\n \n      case 'NumpadSubtract':\n      case 'Minus':\n        scale[0] *= zoomFactor\n        scale[1] *= zoomFactor\n        if (setScale) {\n          setScale(scale[0], scale[1])\n          render()\n        } \n        break\n \n      case 'NumpadAdd':\n      case 'Equal':\n        scale[0] /= zoomFactor\n        scale[1] /= zoomFactor\n        if (setScale) {\n          setScale(scale[0], scale[1])\n          render()\n        } \n        break\n  \n      }\n    }\n    window.addEventListener('keydown', handleKeyDown)\n\n    return (): void => {\n      window.cancelAnimationFrame(renderCallbackID)\n      window.removeEventListener('mousedown', handleMouseDown)\n      window.removeEventListener('mouseup', handleMouseUp)\n      window.removeEventListener('contextmenu', handleContextMenu)\n      window.removeEventListener('mousemove', handleMouseMove)\n      window.removeEventListener('touchstart', handleTouchDown)\n      window.removeEventListener('touchend', handleTouchUp)\n      window.removeEventListener('touchmove', handleTouchMove)\n      window.removeEventListener('keypress', handleKeyDown)\n    }\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return (\n    <div class={style.grid_overlay} {...rest}>\n      <Canvas canvasMethodRefs={canvasMethodRefs} init={init} onResize={onResize} draw={draw} animate={true} />\n    </div>\n  )\n}\n\nexport default GridOverlay\n","/* eslint-disable @typescript-eslint/no-unsafe-argument */\nimport { createRef, FunctionalComponent, h } from 'preact'\nimport Helmet from 'react-helmet'\nimport WebGL2 from '../common/webgl2'\nimport NotFound from '../not-found'\nimport style from '../common/canvas/style.css'\nimport fragmentShaderSource from './fragment.js'\nimport vertexShaderSource from './vertex.js'\nimport GridOverlay from '../common/grid-overlay'\nimport library from '../polynumbers/library'\nimport { PolynumberPlaque } from '../polynumbers/meta'\nimport Polyrat from 'cnum/dist/tsc/Polyrat'\n\nconst initShader = (gl: WebGL2RenderingContext, type: number, source: string): WebGLShader => {\n  const shader = gl.createShader(type)\n  if (!shader) {\n    throw 'Missing shader'\n  }\n  gl.shaderSource(shader, source)\n  gl.compileShader(shader)\n  if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n    throw gl.getShaderInfoLog(shader)\n  }\n  return shader\n}\n\nconst initProgram = (gl: WebGL2RenderingContext): WebGLProgram => {\n  const program = gl.createProgram()\n  if (!program) {\n    throw 'Missing program'\n  }\n  const fragmentShaderSource = document.getElementById('fragmentShader')?.textContent\n  if (!fragmentShaderSource) {\n    throw 'Missing fragmentShaderSource'\n  }\n  const fragmentShader = initShader(gl, gl.FRAGMENT_SHADER, fragmentShaderSource)\n  gl.attachShader(program, fragmentShader)\n  const vertexShaderSource = document.getElementById('vertexShader')?.textContent\n  if (!vertexShaderSource) {\n    throw 'Missing vertexShaderSource'\n  }\n  const vertexShader = initShader(gl, gl.VERTEX_SHADER, vertexShaderSource)\n  gl.attachShader(program, vertexShader)\n  gl.linkProgram(program)\n  if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n    throw gl.getProgramInfoLog(program)??'Error from getProgramParameter'\n  }\n  gl.useProgram(program)\n  return program\n}\n\ninterface Props {\n  path: keyof typeof library;\n}\n\nconst PolynumberVisualizer: FunctionalComponent<Props> = (props: Props) => {\n  const { path } = props\n  \n  if (!(path in library)) {\n    return <NotFound default />\n  }\n  const polynumber = library[path]\n\n  const ref = createRef<HTMLElement>()\n  let shaderProgram: WebGLProgram\n  let timeUniform: WebGLUniformLocation|null\n  let translateUniform: WebGLUniformLocation|null\n  let scaleUniform: WebGLUniformLocation|null\n  const translate = [0, 0]\n  const scale = [1, 1]\n\n  const bindBuffers = (gl: WebGL2RenderingContext, program: WebGLProgram): void => {\n    const positionAttrib = gl.getAttribLocation(program, 'a_position')\n    const vertices = new Float32Array([\n      +1, +1, +0,\n      -1, +1, +0,\n      +1, -1, +0,\n      -1, -1, +0\n    ])\n    const vertexBuffer = gl.createBuffer()\n    gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer)\n    gl.bufferData(gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW)\n    gl.vertexAttribPointer(positionAttrib, 3, gl.FLOAT, false, 0, 0)\n    gl.bindBuffer(gl.ARRAY_BUFFER, null) // unbind\n    gl.enableVertexAttribArray(positionAttrib)\n    timeUniform = gl.getUniformLocation(program, 'u_time')\n    translateUniform = gl.getUniformLocation(program, 'u_translate')\n    scaleUniform = gl.getUniformLocation(program, 'u_scale')\n  }\n  \n  const init = (ctx: WebGL2RenderingContext): void => {\n    translate[0] = -ctx.canvas.width/2\n    translate[1] = -ctx.canvas.height/2\n    shaderProgram = initProgram(ctx)\n    bindBuffers(ctx, shaderProgram)\n  }\n\n  const onResize = (ctx: WebGL2RenderingContext): void => {\n    ctx.viewport(0, 0, ctx.canvas.width, ctx.canvas.height)\n  }\n\n  const setTranslate = (x: number, y: number): void => {\n    translate[0] = x\n    translate[1] = y\n  }\n\n  const setScale = (x: number, y: number): void => {\n    scale[0] = x\n    scale[1] = y\n    setTranslate(0, 0)\n  }\n\n  const draw = (ctx: WebGL2RenderingContext, frameCount: number): void => {\n    ctx.uniform1f(timeUniform, frameCount)\n    ctx.uniform2f(translateUniform, translate[0], translate[1])\n    ctx.uniform2f(scaleUniform, scale[0], scale[1])\n    ctx.drawArrays(ctx.TRIANGLE_STRIP, 0, 4)\n  }\n\n  const polyrat = new Polyrat(polynumber.coefficents)\n\n  return (\n    <section ref={ref} class={style.canvas_frame}>\n      <Helmet><title>{polynumber.title}</title></Helmet>\n      <div class=\"d-none\"><PolynumberPlaque path={polynumber.path} /></div>\n      <div class=\"offcanvas offcanvas-start\" data-bs-scroll=\"true\" data-bs-backdrop=\"false\" id=\"shaders\" aria-labelledby=\"shadersLabel\">\n        <div class=\"offcanvas-header\">\n          <h5 class=\"offcanvas-title\" id=\"shadersLabel\">Shaders</h5>\n          <button type=\"button\" class=\"btn-close text-reset\" data-bs-dismiss=\"parameterPanel\" aria-label=\"Close\" />\n        </div>\n        <div class=\"offcanvas-body\">\n          <form>\n            <div class=\"mb-3\">\n              <label for=\"vertexShader\">Vertex Shader</label>\n              <textarea class=\"form-control\" id=\"vertexShader\" rows={6}>{vertexShaderSource}</textarea>\n            </div>\n            <div class=\"mb-3\">\n              <label for=\"fragmentShader\">Fragment Shader</label>\n              <textarea class=\"form-control\" id=\"fragmentShader\" rows={20}>{fragmentShaderSource.replace('POLYNUMBER_FORMULA', polyrat.toGLSLFormula())}</textarea>\n            </div>\n          </form>\n        </div>\n      </div>\n      <div>\n        <GridOverlay setTranslate={setTranslate} setScale={setScale} />\n      </div>\n      <WebGL2 init={init} onResize={onResize} draw={draw} />\n    </section>\n  )\n}\n\nexport default PolynumberVisualizer\n","export default `#version 300 es\nin vec2 a_position;\nin vec4 a_color;\nout vec4 v_color;\n\nvoid main(void) {\n  gl_Position = vec4(a_position, 0.0, 1.0);\n  v_color = a_color;\n}\n`\n"],"sourceRoot":""}